<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real time chat</title>
    <script src="https://cdn.tailwindcss.com"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato&display=swap" rel="stylesheet">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link rel="stylesheet" id="theme-link" href="./static/homeLight.css">
</head>


<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io({
        auth: {
            token: localStorage.getItem('token')
        }
    });

</script>

<body class="flex flex-col items-center justify-center min-h-screen">
    <div class="main p-8 rounded w-full flex">
        <div class="left-side mini-shadow w-1/4 p-4 rounded mr-4">
            <div class="menu-search mt-4 flex">
                <a href="#" class="a__svg-menu">
                    <svg viewBox="0 0 24 24" class="svg-menu" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M4 6H20M4 12H20M4 18H20" stroke="#3fa695" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
                </a>
                <form action="/search-users" method="post" class="search-form">
                    <input type="text" name="query" class="w-full px-3 py-2 border rounded focus:outline-none focus:border-blue-200" placeholder="Search user with ID">
                </form>
            </div>

            <ul class="users space-y-2 mt-3">
                
            </ul>
            <ul class="chats mt-3">

            </ul>
        </div>
        <!-- Основной контент чата -->
        <div class="w-3/4 inner-main">
            <div class="chat-container">
                <div class="inner-chat-container mini-shadow h-64 overflow-y-auto p-4 rounded">
          
                    <div class="mb-4 chat">
                        
                    </div>
                   
                </div>
                <div class="inner-chat-container-2 mini-shadow rounded">
          
                    <div class="mb-4 chat">
                        
                    </div>
                   
                </div>
            </div>

        </div>
    </div>

    <div id="drawer" class="drawer">
        <div class="menu">
            <div class="inner-menu">
                <div class="text-menu">
                    <center>
                        <h4 class="menu-name">Menu</h4>
                    </center>
                </div>
                <div class="links">
                    <a href="/create-chat" class="menu-link create-chat-link">Create chat</a>
                </div>
                <form method="get" action="/darkmode" class="toggle-container">
                    <p class="dark-mode-text">Dark mode</p>
                    <input type="checkbox" name="darkmode" id="dark-mode-toggle">
                    <label for="dark-mode-toggle"></label>
                </form>
            </div>
        </div>
    </div>
</body>


<script>
    if(!localStorage.token){
        window.location.href = '/registration'
    }

    const darkModeToggle = document.getElementById('dark-mode-toggle');
    const themeLink = document.getElementById('theme-link');
    
    function darkOff(){
        localStorage.setItem('darkmode', -1)
        themeLink.href = "./static/homeLight.css";

    }
    function darkOn(){
        localStorage.setItem('darkmode', 52)
        themeLink.href = "./static/homeDark.css";

    }

    if(localStorage.darkmode === '52'){
        darkModeToggle.checked = true
        darkOn()
    }
    if(localStorage.darkmode === '-1'){
        darkOff()
    }
    
    darkModeToggle.addEventListener('change', function() {
        if (darkModeToggle.checked) {
            darkOn()
        } else {
            darkOff()
        }
    });

    $('.search-form').keydown(e => {
        setTimeout(() => {
            const form = $(e.currentTarget)
            
            $.ajax({
                url: "/search-users",
                method: 'post',
                data: form.serialize(),
                headers: {
                    'Authorization': `Bearer ${localStorage.token}`
                },
                success: res => {
                    $('.users > *').remove()
                    console.log(res)
                    if(res.users.length > 0){
                        for(i of res.users){
                            $('.users').append(`
                                <a href="/chat/${i._id}" class="user-btn">
                                    <div class="get-user">
                                        <div class="wrap__user-avatar">
                                            <img src="${i.avatar === undefined ? '/userAvatars/user-question-alt-svgrepo-com.png' : i.avatar}" alt="User avatar" class="user-avatar ${i.avatar === undefined ? 'no-avatar' : ''}">
                                        </div>
                                        <div class="username">
                                            ${i.username}
                                        </div>
                                    </div> 
                                </a>
                            `)
                        }
                    }
                    if (res.chats.length > 0){
                        for(i of res.chats){
                            $('.users').append(`
                                <a href="/chat/${i._id}">
                                    <div class="get-user ">
                                        <div class="wrap__user-avatar">
                                            <img src="${i.avatar === undefined ? '/userAvatars/user-question-alt-svgrepo-com.png' : i.avatar}" alt="User avatar" class="user-avatar ${i.avatar === undefined ? 'no-avatar' : ''}">
                                        </div>
                                        <div class="username">
                                            ${i.chatName}
                                        </div>
                                    </div> 
                                </a>
                            `)
                            
                        }
                    }
                    if(res.users.length < 1 && res.chats.length < 1){
                        $('.users').append(`
                            <div class="not-found-search bg-amber-200">
                                <center>
                                    <h2>Not found...</h2>
                                </center>
                            </div>
                        `)
                    }
                //    END 
                }
            })
        }, 0)
    })
    
   $.ajax({
        url: "/acquaintances",
        method: "get",
        headers: {
            'Authorization': `Bearer ${localStorage.token}`
        },
        success: res => {
            if(res.users){
                for(i of res.users){
                    $('.users').append(`
                        <a href="/chat/${i._id}">
                            <div class="get-user">
                                <div class="wrap__user-avatar">
                                    <img src="${i.avatar === undefined ? '/userAvatars/user-question-alt-svgrepo-com.png' : i.avatar}" alt="User avatar" class="user-avatar ${i.avatar === undefined ? 'no-avatar' : ''}">
                                </div>
                                <div class="username">
                                    ${i.username}
                                </div>
                            </div> 
                        </a>
                    `)
                }
            }

            if(res.chats.length > 0){
                for(i of res.chats){
                    $('.users').append(`
                        <a href="/chat/${i._id}">
                            <div class="get-user">
                                <div class="wrap__user-avatar">
                                    <img src="${i.avatar === undefined ? '/userAvatars/user-question-alt-svgrepo-com.png' : i.avatar}" alt="User avatar" class="user-avatar ${i.avatar === undefined ? 'no-avatar' : ''}">
                                </div>
                                <div class="username">
                                    ${i.chatName}
                                </div>
                            </div> 
                        </a>
                    `)
                }
            }

            const drawer = $('#drawer');
            const svgMenu = $('.a__svg-menu');

            svgMenu.click(function(e) {
                e.preventDefault();
                
                drawer.toggleClass('open');
                drawer.css({'left': '2%', 'height': `462px`, 'top': '19.3%', 'width': '14%'})

                $('.create-chat-link').click(e => {
                    e.preventDefault()
  
                    $('.inner-main > *').remove()
                    $('.inner-main').append(`
                        <div class="create-chat-container p-8 rounded shadow w-full h-full flex flex-col">
                            <span class="absolute svg-close-create-chat">
                                <svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
                            </span>
                            <h1 class="text-center text-2xl font-bold">Create chat</h1>
                            <div class="wrap__alert-chat-create">
                
                            </div>
                            <form action="/create-chat" method="post" enctype="multipart/form-data" class="form-create-chat flex flex-col h-full">
                                <div class="mb-3">
                                    <label for="chatName" class="lable-create-chat block text-sm font-bold mb-2">Chat name</label>
                                    <input type="chatName" name="chatName" id="chatName" class="input-create-chat appearance-none border rounded w-full py-2 px-3  leading-tight focus:outline-none focus:shadow-outline" required>
                                </div>
                                <div class="mb-3 uniqueChatName-container">
                                    <label for="uniqueChatName" class="lable-create-chat block text-sm font-bold mb-2">Unique chat name</label>
                                    <input type="text" name="uniqueChatName" id="uniqueChatName" class="input-create-chat uniqueChatName appearance-none border rounded w-full py-2 px-3  leading-tight focus:outline-none focus:shadow-outline" required>
                                </div>
                                <div class="mb-3 max-users-container">
                                    <label for="max-users" class="lable-create-chat block text-sm font-bold mb-2">Max users in chat</label>
                                    <input type="number" name="maxUsers" id="max-users" class="input-create-chat max-users appearance-none border rounded w-full py-2 px-3  leading-tight focus:outline-none focus:shadow-outline">
                                </div>
                                <div class="mb-3 avatar-container">
                                    <label for="avatar" class="label-avatar block text-sm font-bold mb-2">Avatar</label>
                                    <label class="input-file w-full">
                                            <input type="file" name="chatAvatar">		
                                            <span class="w-full">Choose file</span>
                                    </label>
                                </div>
                                <div class="flex items-center justify-between mt-auto">
                                    <button type="submit" class="button-submit-create-chat w-full text-white font-bold py-3 px-4 rounded focus:outline-none focus:shadow-outline">Create</button>
                                </div>
                            </form>
                        </div>
                    `)

                    $('.input-file input[type=file]').on('change', function(){
                        let file = this.files[0];
                        $(this).next().html(file.name);
                    });

                    $('.svg-close-create-chat').click(e => {
                        window.location.href = `/` 
                    })

                    $('.uniqueChatName').keydown(e => {
                        setTimeout(() => {
                            const form = $(e.currentTarget)
                            $.ajax({
                                url: "/confirm-unique-chatname",
                                method: "post",
                                headers: {
                                    'Authorization': `Bearer ${localStorage.token}`
                                },
                                data: form.serialize(),
                                success: res => {
                                    if(!res.ok){
                                        $('.alert-confirm-uniqueChat').remove()
                             
                                        $('.button-submit-create-chat').prop('disabled', true);
            
                                        $('.uniqueChatName-container').append(`
                                            <li class="alert-confirm-uniqueChat" style="list-style: none; font-size: 13px; color: #ff5555; margin-top: 3px">${res.message}</li>
                                        `)
                                    }else{
                                        $('.alert-confirm-uniqueChat').remove()
                                        $('.button-submit-create-chat').prop('disabled', false);
            
                                        $('.uniqueChatName-container').append(`
                                            <li class="alert-confirm-uniqueChat" style="list-style: none; font-size: 13px; color: #45d7a2; margin-top: 3px">Unique chat name is available!</li>
                                        `)
                                    }
                                }
                            })
                        }, 0)
                    })

                    $('.form-create-chat').submit(function(e) {
                        e.preventDefault();
                    
                        var form = this; // Теперь 'this' ссылается на DOM элемент формы
                        var formData = new FormData(); // Создаем пустой объект FormData
                    
                        // Добавляем данные из формы в FormData
                        for (var pair of new FormData(form).entries()) {
                            formData.append(pair[0], pair[1]);
                        }
                    
                        $.ajax({
                            url: form.action, // URL, указанный в атрибуте action формы
                            type: form.method, // Метод запроса, указанный в атрибуте method формы
                            data: formData,
                            contentType: false, // Не устанавливать заголовок Content-Type
                            processData: false, // Не обрабатывать данные формы
                            headers: {
                                'Authorization': `Bearer ${localStorage.token}`
                            },
                            success: res => {
                                console.log(res)
                                if(res.ok){
                                    socket.emit('join room', uniqueChatName)
                                    window.location.href = '/'
                                }else{
                                    $('.wrap__alert-chat-create').append(`
                                        <div class="alert-confirm-uniqueUsername bg-red-100 mb-4 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                                            <strong class="font-bold">Error:</strong>
                                            <span class="block sm:inline">${res.message}</span>
                                            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                                                <svg class="svg-close fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
                                            </span>
                                        </div>
                                    `)
                                    $('.svg-close').click(e => {
                                        e.preventDefault()
                                        $('.wrap__alert-chat-create > *').remove()
                                    })
                                }
                            }
                        })
                    })
                    
                   })
            });
            drawer.mouseleave(() => {
                drawer.css({'left': '-20%'})
            })
        }
   })
</script>
</html>